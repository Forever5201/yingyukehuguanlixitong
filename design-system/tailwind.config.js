const tokens = require('./design-tokens.json');

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
    "./components/**/*.{js,jsx,ts,tsx}",
    "./pages/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          DEFAULT: tokens.color.primary.value,
          400: tokens.color['primary-400'].value,
          600: tokens.color['primary-600'].value,
        },
        secondary: tokens.color.secondary.value,
        accent: tokens.color.accent.value,
        success: tokens.color.success.value,
        warning: tokens.color.warning.value,
        danger: tokens.color.danger.value,
        info: tokens.color.info.value,
        muted: tokens.color.muted.value,
        text: {
          DEFAULT: tokens.color.text.value,
          secondary: tokens.color['text-secondary'].value,
        },
        background: {
          DEFAULT: tokens.color.background.value,
          secondary: tokens.color['background-secondary'].value,
          tertiary: tokens.color['background-tertiary'].value,
        },
        border: {
          DEFAULT: tokens.color.border.value,
        },
        kpi: {
          bg: tokens.color['kpi-bg'].value,
          value: tokens.color['kpi-value'].value,
          'trend-up': tokens.color['kpi-trend-up'].value,
          'trend-down': tokens.color['kpi-trend-down'].value,
        },
        table: {
          'header-bg': tokens.color['table-header-bg'].value,
          'row-hover': tokens.color['table-row-hover'].value,
          border: tokens.color['table-border'].value,
        },
        filter: {
          bg: tokens.color['filter-bg'].value,
          active: tokens.color['filter-active'].value,
        },
      },
      spacing: {
        xs: `${tokens.spacing.xs.value}px`,
        sm: `${tokens.spacing.sm.value}px`,
        md: `${tokens.spacing.md.value}px`,
        lg: `${tokens.spacing.lg.value}px`,
        xl: `${tokens.spacing.xl.value}px`,
        '2xl': `${tokens.spacing['2xl'].value}px`,
        '3xl': `${tokens.spacing['3xl'].value}px`,
      },
      fontFamily: {
        sans: tokens.typography.fontFamily.base.split(',').map(f => f.trim()),
        mono: tokens.typography.fontFamily.mono.split(',').map(f => f.trim()),
      },
      fontSize: {
        xs: [`${tokens.typography.fontSize.xs}px`, { lineHeight: tokens.typography.lineHeight.tight }],
        sm: [`${tokens.typography.fontSize.sm}px`, { lineHeight: tokens.typography.lineHeight.normal }],
        base: [`${tokens.typography.fontSize.base}px`, { lineHeight: tokens.typography.lineHeight.base }],
        lg: [`${tokens.typography.fontSize.lg}px`, { lineHeight: tokens.typography.lineHeight.normal }],
        xl: [`${tokens.typography.fontSize.xl}px`, { lineHeight: tokens.typography.lineHeight.tight }],
        '2xl': [`${tokens.typography.fontSize['2xl']}px`, { lineHeight: tokens.typography.lineHeight.tight }],
        '3xl': [`${tokens.typography.fontSize['3xl']}px`, { lineHeight: tokens.typography.lineHeight.tight }],
        h1: [`${tokens.typography.fontSize.h1}px`, { lineHeight: tokens.typography.lineHeight.tight }],
        h2: [`${tokens.typography.fontSize.h2}px`, { lineHeight: tokens.typography.lineHeight.tight }],
        h3: [`${tokens.typography.fontSize.h3}px`, { lineHeight: tokens.typography.lineHeight.normal }],
        h4: [`${tokens.typography.fontSize.h4}px`, { lineHeight: tokens.typography.lineHeight.normal }],
        body: [`${tokens.typography.fontSize.body}px`, { lineHeight: tokens.typography.lineHeight.base }],
        small: [`${tokens.typography.fontSize.small}px`, { lineHeight: tokens.typography.lineHeight.normal }],
        caption: [`${tokens.typography.fontSize.caption}px`, { lineHeight: tokens.typography.lineHeight.relaxed }],
      },
      fontWeight: {
        normal: tokens.typography.fontWeight.normal,
        medium: tokens.typography.fontWeight.medium,
        semibold: tokens.typography.fontWeight.semibold,
        bold: tokens.typography.fontWeight.bold,
      },
      letterSpacing: {
        tight: tokens.typography.letterSpacing.tight,
        normal: tokens.typography.letterSpacing.normal,
        wide: tokens.typography.letterSpacing.wide,
      },
      borderRadius: {
        none: `${tokens.radius.none}px`,
        sm: `${tokens.radius.sm}px`,
        DEFAULT: `${tokens.radius.base}px`,
        md: `${tokens.radius.md}px`,
        lg: `${tokens.radius.lg}px`,
        xl: `${tokens.radius.xl}px`,
        full: `${tokens.radius.full}px`,
      },
      boxShadow: {
        none: tokens.shadow.none,
        sm: tokens.shadow.sm,
        DEFAULT: tokens.shadow.base,
        md: tokens.shadow.md,
        lg: tokens.shadow.lg,
        xl: tokens.shadow.xl,
        card: tokens.shadow.card,
        kpi: tokens.shadow.kpi,
        dropdown: tokens.shadow.dropdown,
        modal: tokens.shadow.modal,
      },
      transitionDuration: {
        fast: tokens.animation.duration.fast,
        normal: tokens.animation.duration.normal,
        slow: tokens.animation.duration.slow,
      },
      transitionTimingFunction: {
        linear: tokens.animation.easing.linear,
        ease: tokens.animation.easing.ease,
        'ease-in': tokens.animation.easing.easeIn,
        'ease-out': tokens.animation.easing.easeOut,
        'ease-in-out': tokens.animation.easing.easeInOut,
        smooth: tokens.animation.easing.smooth,
      },
      screens: {
        sm: `${tokens.breakpoints.sm}px`,
        md: `${tokens.breakpoints.md}px`,
        lg: `${tokens.breakpoints.lg}px`,
        xl: `${tokens.breakpoints.xl}px`,
        '2xl': `${tokens.breakpoints['2xl']}px`,
      },
      zIndex: {
        dropdown: tokens.zIndex.dropdown,
        sticky: tokens.zIndex.sticky,
        fixed: tokens.zIndex.fixed,
        'modal-backdrop': tokens.zIndex.modalBackdrop,
        modal: tokens.zIndex.modal,
        popover: tokens.zIndex.popover,
        tooltip: tokens.zIndex.tooltip,
      },
    },
  },
  plugins: [],
}